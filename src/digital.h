

// Generated by slyft.io
// This code part has been generated on an "as is" basis, without warranties or conditions of any kind.

// slyftlet=c99-generic-msgpack

#ifndef tut1_DIGITAL_H
#define tut1_DIGITAL_H

#include "mpack/mpack.h"

struct TUT1__digital {
  /* The port name will be given as DX. */
  char	port[3];
  /* The value will be written on DX. */
  int32_t	value;

  /**
  * Wipes contents to \0
  * @param self      pointer to target struct TUT1__digital
  */
  void (*TUT1__digital_clean)(struct TUT1__digital *self);

  /**
  * Given an input buffer and its size, this functions parses the elements
  * of struct TUT1__digital
  * @param self          pointer to target struct TUT1__digital
  * @param input_buf     input buffer
  * @param sz_input_buf  size of input buffer
  * @return 0=success, 1=error
  */
  int (*TUT1__digital_parse)(struct TUT1__digital *self, const uint8_t *input_buf, size_t sz_input_buf);

  /**
  * Given a msgpack reader, this functions parses the elements
  * of struct TUT1__digital
  * @param self          pointer to target struct TUT1__digital
  * @param reader        pointer to mpack reader struct
  */
  void (*TUT1__digital_parse_mpack)(struct TUT1__digital *self, mpack_reader_t *reader);

  /**
  * Given a struct TUT1__digital, this function serializes it into given output buffer.
  * @param self              pointer to source struct TUT1__digital
  * @param output_buf        output buffer
  * @param sz_output_buf     size of output buffer
  * @return Length of output buf (0=error)
  */
  size_t (*TUT1__digital_serialize)(const struct TUT1__digital *self, uint8_t *output_buf, size_t sz_output_buf);

  /**
  * Given a struct TUT1__digital, this function serializes it into given mpack writer.
  * @param self              pointer to source struct TUT1__digital
  * @param writer 	         pointer to mpack writer struct
  */
  void (*TUT1__digital_serialize_mpack)(const struct TUT1__digital *self, mpack_writer_t *writer);

};

/**
 * Initializes struct struct TUT1__digital. empties fields, sets function pointers
 * @param self  struct TUT1__digital
 */
void TUT1__digital_init(struct TUT1__digital *self);


/* ORIGINAL SCHEMA
{"$schema"=>"http://json-schema.org/draft-04/schema#", "id"=>"digital", "title"=>"Digital Ports", "description"=>"Digital Port Definitions", "type"=>"object", "properties"=>{"port"=>{"type"=>"string", "maxLength"=>2, "description"=>"The port name will be given as DX."}, "value"=>{"type"=>"integer", "description"=>"The value will be written on DX."}}, "required"=>["port"]}
 */
#endif		//tut1_DIGITAL_H

